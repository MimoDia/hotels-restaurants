<?php

/**
 * @file
 * Functions to support theming in the ive theme.

 */
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Template\Attribute;
// Faisons une normalisation (avant d'appeler . Html::cleanCssIdentifier($current_path);)
use Drupal\Component\Utility\Html;
/**
 * Implements hook_preprocess_HOOK() for HTML document templates.
 *
 * Adds body classes if certain regions have content.
 */
function ive_preprocess_html(&$variables) {
  // Add information about the number of sidebars.

  //recuperer le chemin systeme de la page que je mets dans la variable  $current_path
  $current_path = \Drupal::service('path.current')->getPath();
  // creation de la classe page
  $variables['attributes']['class'][] = 'page';
  $variables['attributes']['class'][]=  'page' . Html::cleanCssIdentifier($current_path);
  //Normalisation de la class page
}


/**
 * Implements hook_preprocess_HOOK() for node.html.twig.
 */
function ive_preprocess_node(&$variables) {
  // Change date format 
$created=$variables['node']->getCreatedTime();
$variables['date']= format_date($created, 'very_long'); // very_long est le nom de machine creer lors de la creation du format de date
}

/**
 * Implements hook_preprocess_HOOK() for block.html.twig.
 */
function ive_preprocess_block(&$variables) {
  // Add base_path varible // 
  $variables['base_path']= base_path();
  //kint($variables['base_path']); 

}


// Ajou de sugestions de tempalte basé sur un tempate base
function ive_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    kint($variables);
    // Ajout de suggestions de template
      $suggestions[]= 'page__node__' . $node->bundle();
      $suggestions[]= 'page__node__' . $node->id();

  }
  // kint($suggestions);
  // Ajou de sugestions de tempalte basé sur udes termes de taxonomie
    if ($term = \Drupal::routeMatch()->getParameter('taxonomy_term')) {
    // Ajout de suggestions de template
      $suggestions[]= 'page__taxonomy__' . $term->bundle();
      $suggestions[]= 'page__taxonomy__' . $term->id();

  }
}

/**
 * Implements hook_form_alter() to add classes to the search form.
 */
function ive_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (in_array($form_id, ['search_block_form', 'search_form'])) {
    $key = ($form_id == 'search_block_form') ? 'actions' : 'basic';
    if (!isset($form[$key]['submit']['#attributes'])) {
      $form[$key]['submit']['#attributes'] = new Attribute();
    }
    $form[$key]['submit']['#attributes']->addClass('search-form__submit');
  }
}
